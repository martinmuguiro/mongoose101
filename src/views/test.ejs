
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Test Ikasleak API</title>
    <script>
        async function fetchIkasleak() {
            const response = await fetch('/api/ikasleak');
            const data = await response.json();
            document.getElementById('ikasleak').innerText = JSON.stringify(data, null, 2);
        }

        async function fetchCombo() {
            const response = await fetch('/api/ikasleak');
            const data = await response.json();

            const combobox = document.getElementById('ikasle-combobox');
            combobox.innerHTML = '<option value="" disabled selected>Choose an ikasle</option>';
            data.forEach(ikasle => {
                const option = document.createElement('option');
                option.value = ikasle._id;  
                option.textContent = `${ikasle.email}, id: ${ikasle._id}`;  
                combobox.appendChild(option);
            });



            const responseTaldeak = await fetch('/api/taldeak');
            const dataTaldeak = await responseTaldeak.json();

            const comboboxTaldeak = document.getElementById('talde-combobox');
            comboboxTaldeak.innerHTML = '<option value="" disabled selected>Choose a talde</option>';
            dataTaldeak.forEach(talde => {
                const option = document.createElement('option');
                option.value = talde._id;  
                option.textContent = `${talde.izena}`;  
                comboboxTaldeak.appendChild(option);
            });

            const combobox2 = document.getElementById('ikasle2-combobox');
            combobox2.innerHTML = '<option value="" disabled selected>Choose an ikasle</option>';

            data.forEach(ikasle => {
                const option = document.createElement('option');
                option.value = ikasle._id;  
                option.textContent = `${ikasle.email}, id: ${ikasle._id}`;  
                combobox2.appendChild(option);
            });

        }

        async function createIkasle() {
            const izena = document.getElementById('izena').value;
            const adina = document.getElementById('adina').value;
            const email = document.getElementById('email').value;

            const response = await fetch('/api/ikasleak', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ izena, adina, email })
            });

            const data = await response.json();
            document.getElementById('newIkasle').innerText = JSON.stringify(data, null, 2);

            fetchCombo();
        }

        async function deleteIkasle() {
            const id = document.getElementById("deleteId").value;

            const response = await fetch(`/api/ikasleak/${id}`, {
            method: "DELETE",
            });

            const data = await response.json();
            document.getElementById("deletedIkasle").innerText = JSON.stringify(
            data,
            null,
            2
            );

            fetchCombo();
        }

        async function editIkasle() {
            const id = document.getElementById('ikasle-combobox').value;
            
            const updatedIkasle = {
                izena: document.getElementById('newName').value,
                adina: document.getElementById('newAdina').value,
                email: document.getElementById('newEmail').value
            };

            try {
                const response = await fetch(`/api/ikasleak/${id}`, {
                    method: 'PUT',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(updatedIkasle)
                });
                
                if (!response.ok) {
                    throw new Error(`HTTP error! status: ${response.status}`);
                }
                
                const data = await response.json();
                document.getElementById("editedIkasle").innerText = JSON.stringify(
                    data,
                    null,
                    2
                );

                // Actualizar el combo box después de la edición
                await fetchCombo();
                
            } catch (error) {
                console.error('Error:', error);
                document.getElementById("editedIkasle").innerText = `Ikaslea ez da aurkitu`;
            }
        }

        async function createTalde() {
            const izena = document.getElementById('taldeIzena').value;

            const response = await fetch('/api/taldeak', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ izena })
            });

            const data = await response.json();
            document.getElementById('newTalde').innerText = JSON.stringify(data, null, 2);

            fetchCombo();
        }

        async function addIkasleToTalde() {
            const ikasleId = document.getElementById('ikasle2-combobox').value;
            const taldeId = document.getElementById('talde-combobox').value;

            try {
                const response = await fetch('/api/taldeak/assign', { 
                    method: 'POST', 
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ taldeId, ikasleId }) 
                });

                if (!response.ok) {
                    throw new Error(`HTTP error! status: ${response.status}`);
                }

                const data = await response.json();
                document.getElementById('addedIkasle').innerText = JSON.stringify(data, null, 2);
            } catch (error) {
                console.error('Error:', error);
                document.getElementById('addedIkasle').innerText = "Bietako bat ez da aurkitu edo ikaslea jada taldean dago";
            }
        }


        async function fetchTaldeak() {
            const response = await fetch('/api/taldeak');
            const data = await response.json();
            document.getElementById('taldeak').innerText = JSON.stringify(data, null, 2);
        }

        window.onload = function() {
            fetchCombo();
        }
    </script>
</head>
<body>
    <h1>Test Ikasleak API</h1>
    <button onclick="fetchIkasleak()">Get Ikasleak</button>
    <pre id="ikasleak"></pre>

    <h2>Create Ikasle</h2>
    <form onsubmit="event.preventDefault(); createIkasle();">
        <label for="izena">Izena:</label>
        <input type="text" id="izena" name="izena" required>
        <br>
        <label for="adina">Adina:</label>
        <input type="number" id="adina" name="adina" required>
        <br>
        <label for="email">Email:</label>
        <input type="email" id="email" name="email" required>
        <br>
        <button type="submit">Create</button>
    </form>
    <pre id="newIkasle"></pre>

    <h2>Delete Ikasle</h2>
    <form onsubmit="event.preventDefault(); deleteIkasle();">
        <label for="id">Id:</label>
        <input type="text" id="deleteId" name="id" required>
        <br>
        <button type="submit">Delete</button>
    </form>
    <pre id="deletedIkasle"></pre>

    <h2>Edit Ikasle</h2>
    <form onsubmit="event.preventDefault(); editIkasle();">
        <label for="ikasle-combobox">Ikasle email:</label>
    <select id="ikasle-combobox">
        <option value="" disabled selected>Choose an ikasle</option>
    </select>
    <br>
        <label for="name">Izena:</label>
        <input type="text" id="newName" name="newName" required>
        <br>
        <label for="adina">Adina:</label>
        <input type="number" id="newAdina" name="newAdina" required>
        <br>
        <label for="email">Email:</label>
        <input type="email" id="newEmail" name="newEmail" required>
        <br>
        <button type="submit">Edit</button>
    </form>
    <pre id="editedIkasle"></pre>

    <h2>Create Talde</h2>
    <form onsubmit="event.preventDefault(); createTalde();">
        <label for="izena">Talde izena:</label>
        <input type="text" id="taldeIzena" name="izena" required>
        <br>
        <button type="submit">Create</button>
    </form>
    <pre id="newTalde"></pre>

    <h2>Assign Ikasle to Talde</h2>
    <form onsubmit="event.preventDefault(); addIkasleToTalde();">
        <label for="ikasle2-combobox">Aukeratu ikaslea:</label>
    <select id="ikasle2-combobox">
        <option disabled selected>Choose an ikasle</option>
    </select>
    <br>
        <label for="talde-combobox">Aukeratu taldea:</label>
    <select id="talde-combobox">
        <option value="" disabled selected>Choose a talde</option>
    </select>
    <br>
        <button type="submit">Assign</button>
    </form>
    <pre id="addedIkasle"></pre>

    <h2>Get Taldeak</h2>
    <button onclick="fetchTaldeak()">Get Taldeak</button>
    <pre id="taldeak"></pre>
</body>
</html>